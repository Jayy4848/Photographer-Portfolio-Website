# Elite Photography Website - Setup & Installation Guide

## Project Overview
This is a professional photography portfolio website built with Django that showcases various photography services including weddings, portraits, events, and more. The website features a modern, responsive design with image galleries, contact forms, testimonials, and booking functionality.

## Project Structure & Wireframe

```
Demo Sample/
│
├── manage.py                          # Django management script
├── requirements.txt                   # Python dependencies
├── db.sqlite3                        # SQLite database
├── How to Run.txt                    # This setup guide
├── SAMPLE_DATA_OVERVIEW.md           # Sample data documentation
│
├── photography_site/                  # Main Django project folder
│   ├── __init__.py
│   ├── settings.py                   # Django settings
│   ├── urls.py                       # Main URL configuration
│   ├── wsgi.py                       # WSGI application
│   └── asgi.py                       # ASGI application
│
├── photographer/                      # Main Django app
│   ├── __init__.py
│   ├── admin.py                      # Django admin configuration
│   ├── apps.py                       # App configuration
│   ├── models.py                     # Database models
│   ├── views.py                      # View functions
│   ├── urls.py                       # App URL patterns
│   ├── forms.py                      # Django forms
│   ├── tests.py                      # Unit tests
│   ├── migrations/                   # Database migrations
│   │   ├── __init__.py
│   │   └── 0001_initial.py
│   └── management/                   # Custom management commands
│       ├── __init__.py
│       └── commands/
│           ├── __init__.py
│           └── populate_sample_data.py
│
├── templates/                         # HTML templates
│   ├── base.html                     # Base template with header/footer
│   └── photographer/
│       ├── home.html                 # Homepage with hero video
│       ├── gallery_list.html         # All gallery categories
│       ├── gallery_detail.html       # Individual category galleries
│       ├── about.html                # About page
│       ├── contact.html              # Contact form page
│       ├── testimonials.html         # Client testimonials
│       └── search.html               # Search functionality
│
├── static/                            # Static files (CSS, JS, Images)
│   ├── css/
│   │   └── style.css                 # Custom CSS styles
│   ├── js/
│   │   └── main.js                   # Custom JavaScript
│   └── images/                       # Static images
│
└── media/                             # User uploaded files
    ├── galleries/                    # Gallery images
    └── testimonials/                 # Client photos
```

## Website Architecture & Features

### Frontend Features:
- Responsive Bootstrap 5 design
- Hero section with cinematic mountain video
- Image galleries with category filtering
- Download functionality for all images
- Testimonials with client photos
- Contact form with validation
- Search functionality
- Mobile-optimized navigation

### Backend Features:
- Django 4.2.7 framework
- SQLite database
- Admin panel for content management
- Image optimization with django-imagekit
- Form handling with django-crispy-forms
- File cleanup with django-cleanup

### Database Models:
- Category: Photography categories (Wedding, Portrait, etc.)
- GalleryImage: Individual photos with metadata
- Testimonial: Client reviews with ratings
- ContactSubmission: Contact form submissions
- SiteSettings: Website configuration
- Award: Photographer achievements

## Prerequisites
Before setting up the project, ensure you have the following installed:

1. **Python 3.8 or higher**
   - Download from: https://www.python.org/downloads/
   - Verify installation: `python --version`

2. **Visual Studio Code**
   - Download from: https://code.visualstudio.com/
   - Install Python extension for VS Code

3. **Git** (optional but recommended)
   - Download from: https://git-scm.com/

## Installation & Setup Instructions

### Step 1: Open Project in VS Code
1. Open Visual Studio Code
2. Click "File" → "Open Folder"
3. Navigate to and select the "Demo Sample" folder
4. Click "Select Folder"

### Step 2: Open Terminal in VS Code
1. In VS Code, press `Ctrl + `` (backtick) to open integrated terminal
2. Or go to "Terminal" → "New Terminal"
3. Ensure you're in the project directory (you should see manage.py in the folder)

### Step 3: Create Virtual Environment (Recommended)
```bash
# Create virtual environment
python -m venv photography_env

# Activate virtual environment
# On Windows:
photography_env\Scripts\activate
# On macOS/Linux:
source photography_env/bin/activate

# You should see (photography_env) prefix in your terminal
```

### Step 4: Install Required Dependencies
```bash
# Install all required packages
pip install -r requirements.txt

# This will install:
# - Django==4.2.7
# - python-decouple
# - Pillow (for image handling)
# - django-crispy-forms
# - django-cleanup
# - django-imagekit
# - whitenoise
# - django-cors-headers
# - django-extensions
```

### Step 5: Database Setup
```bash
# Apply database migrations
python manage.py makemigrations
python manage.py migrate

# Create a superuser account for admin access
python manage.py createsuperuser
# Enter username: admin
# Enter email: admin@example.com
# Enter password: (choose a secure password)
```

### Step 6: Populate Sample Data
```bash
# Add sample photography categories, images, and testimonials
python manage.py populate_sample_data

# This creates:
# - 12 photography categories (Wedding, Portrait, etc.)
# - 92+ sample images across all categories
# - 10 client testimonials with photos
# - Sample site settings
```

### Step 7: Run the Development Server
```bash
# Start the Django development server
python manage.py runserver

# The website will be available at:
# http://127.0.0.1:8000/
# or
# http://localhost:8000/
```

### Step 8: Access Admin Panel
```bash
# Admin panel URL:
# http://127.0.0.1:8000/admin/

# Login with the superuser credentials you created
# From here you can:
# - Add/edit gallery images
# - Manage categories
# - View contact submissions
# - Edit site settings
# - Manage testimonials
```

## Key Features & Functionality

### 1. Gallery System
- **12 Photography Categories:**
  - Wedding Photography (12 images)
  - Pre-Wedding Shoots (8 images)
  - Portrait Photography (10 images)
  - Birthday Parties (8 images)
  - Corporate Events (8 images)
  - Baby & Family (9 images)
  - Maternity Photography (6 images)
  - Graduation Photography (6 images)
  - Fashion & Model (7 images)
  - Engagement Sessions (6 images)
  - Food Photography (6 images)
  - Sports Photography (6 images)

### 2. Image Download Feature
- Hover over any gallery image to see download button
- Click download to save high-quality image
- Automatic filename generation with category

### 3. Contact System
- Professional contact form with validation
- Functional WhatsApp, phone, and email buttons
- Admin panel for managing inquiries
- Email notifications for new submissions

### 4. Testimonials
- Client reviews with star ratings
- Unique profile photos for each testimonial
- Category filtering (Wedding, Birthday, etc.)
- Featured testimonials highlighting

### 5. Search Functionality
- Search across images, categories, and locations
- Real-time search results
- Category-specific filtering

## Troubleshooting

### Common Issues:

1. **"No module named 'photographer'"**
   - Ensure you're in the correct directory with manage.py
   - Check that virtual environment is activated

2. **"Port 8000 is already in use"**
   - Use different port: `python manage.py runserver 8080`
   - Or kill existing process using port 8000

3. **Static files not loading**
   - Run: `python manage.py collectstatic`
   - Check STATIC_URL and STATIC_ROOT in settings.py

4. **Images not displaying**
   - Ensure MEDIA_URL and MEDIA_ROOT are configured
   - Check file permissions in media directory

5. **Migration errors**
   - Delete `db.sqlite3` and `migrations/` folders
   - Run: `python manage.py makemigrations photographer`
   - Run: `python manage.py migrate`

## Development Commands

```bash
# Create new migrations
python manage.py makemigrations

# Apply migrations
python manage.py migrate

# Create superuser
python manage.py createsuperuser

# Collect static files
python manage.py collectstatic

# Clear sample data and repopulate
python manage.py populate_sample_data --clear

# Run tests
python manage.py test

# Check for issues
python manage.py check

# Django shell for debugging
python manage.py shell
```

## Browser Compatibility
- Chrome 90+
- Firefox 88+
- Safari 14+
- Edge 90+
- Mobile browsers (iOS Safari, Chrome Mobile)

The website is fully responsive and works on all modern devices and screen sizes.

---

**Developed by DualSpark Studio**

This is a complete photography portfolio website ready for professional use. All sample data is included, and the admin panel allows for easy content management without coding knowledge. 