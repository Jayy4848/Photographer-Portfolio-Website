# Generated by Django 4.2.7 on 2025-06-19 01:50

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Award',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('organization', models.CharField(max_length=200)),
                ('year', models.PositiveIntegerField()),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='awards/')),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['-year', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='categories/')),
                ('order', models.PositiveIntegerField(default=0, help_text='Order of appearance on the website')),
                ('is_featured', models.BooleanField(default=False, help_text='Display in featured section')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ContactSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(2)])),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('inquiry_type', models.CharField(choices=[('wedding', 'Wedding Photography'), ('reception', 'Reception Photography'), ('birthday', 'Birthday Party'), ('corporate', 'Corporate Event'), ('baby_shower', 'Baby Shower'), ('pre_wedding', 'Pre-wedding Shoot'), ('other', 'Other Event'), ('general', 'General Inquiry')], default='general', max_length=20)),
                ('event_date', models.DateField(blank=True, null=True)),
                ('event_location', models.CharField(blank=True, max_length=200)),
                ('guest_count', models.PositiveIntegerField(blank=True, help_text='Approximate number of guests', null=True)),
                ('budget_range', models.CharField(blank=True, help_text='Your budget range', max_length=50)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('is_responded', models.BooleanField(default=False)),
                ('admin_notes', models.TextField(blank=True, help_text='Internal notes for admin')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SiteSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photographer_name', models.CharField(default='Professional Photographer', max_length=100)),
                ('tagline', models.CharField(default="Capturing Life's Beautiful Moments", max_length=200)),
                ('about_text', models.TextField(default='Professional photographer with years of experience...')),
                ('email', models.EmailField(default='contact@photographer.com', max_length=254)),
                ('phone', models.CharField(default='+1234567890', max_length=20)),
                ('address', models.TextField(default='123 Photography St, City, State 12345')),
                ('working_hours', models.CharField(default='Mon-Sat: 9AM-6PM', max_length=100)),
                ('instagram_url', models.URLField(blank=True)),
                ('facebook_url', models.URLField(blank=True)),
                ('twitter_url', models.URLField(blank=True)),
                ('whatsapp_number', models.CharField(blank=True, max_length=20)),
                ('hero_video', models.FileField(blank=True, null=True, upload_to='hero/')),
                ('hero_image', models.ImageField(blank=True, null=True, upload_to='hero/')),
                ('hero_title', models.CharField(default='Professional Photography', max_length=200)),
                ('hero_subtitle', models.CharField(default='Creating timeless memories through the lens', max_length=300)),
                ('meta_title', models.CharField(default='Professional Photography Services', max_length=60)),
                ('meta_description', models.CharField(default='Professional photography for weddings, events, and special occasions.', max_length=160)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Site Settings',
                'verbose_name_plural': 'Site Settings',
            },
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_name', models.CharField(max_length=100)),
                ('client_photo', models.ImageField(blank=True, null=True, upload_to='testimonials/')),
                ('testimonial_text', models.TextField()),
                ('event_type', models.CharField(blank=True, help_text='e.g., Wedding, Birthday', max_length=100)),
                ('event_date', models.DateField(blank=True, null=True)),
                ('rating', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=5)),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-is_featured', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GalleryImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(upload_to='galleries/')),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_featured', models.BooleanField(default=False, help_text='Display in hero section or featured galleries')),
                ('date_taken', models.DateField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='photographer.category')),
            ],
            options={
                'ordering': ['order', '-created_at'],
            },
        ),
    ]
